USE iTLoads;
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE dbo.LoadWorkPatterns
AS
SET NOCOUNT ON;

SELECT P.EMP_NO, X.STANDARD_HOURS
into #ESH
FROM dbo.PERSON P
	JOIN dbo.APPOINTMENTS A
		ON P.EMP_NO = A.EMP_NO
	JOIN dbo.CONTRACT_DETAILS D
		ON A.EMP_NO = D.EMP_NO
			AND A.CONTRACT_NO = D.CONTRACT_NO
	LEFT JOIN dbo.MultiPaidContracts M
		ON A.EMP_NO = M.EMP_NO
			AND A.CONTRACT_NO = M.CONTRACT_NO
	--OUTER APPLY
	CROSS APPLY
	(
		SELECT TOP 1 GR.STANDARD_HOURS
		FROM GRADES G
			LEFT JOIN GRADE_RANGE GR
				ON G.GRADE_GROUP = GR.SCALE_CODE
		WHERE G.GRADE_ID = A.GRADE
		ORDER BY GR.PAY_AWARD_DATE DESC
	) SH
	CROSS APPLY
	(
		VALUES
		(
			LTRIM(RTRIM(P.EMP_NO))
			,CASE
				WHEN SH.STANDARD_HOURS IS NULL
					AND A.GRADE IN ('AFC 7', 'AFC8C', 'AFC 5', 'AFC8B')
				THEN 37.5
				WHEN SH.STANDARD_HOURS IS NULL
					AND A.GRADE = 'PSC'
				THEN 0
				WHEN SH.STANDARD_HOURS IS NOT NULL
				THEN SH.STANDARD_HOURS
				ELSE 40
			END
		)
	) X (PER_REF_NO, STANDARD_HOURS)
WHERE 
	(
		P.PERSON_STATUS NOT LIKE 'L%'
		OR (P.PERSON_STATUS LIKE 'L%' AND P.DATE_OF_LEAVING >= '20170406')
	)
	AND D.IS_MASTER = 'Y'
	AND
	(
		A.CURRENT_INDICATOR IN ('C','L')
		OR
		(
			A.CURRENT_INDICATOR = 'J'
			AND
			(
				NOT EXISTS
				(
						SELECT 1
						FROM dbo.APPOINTMENTS A1
						WHERE A1.EMP_NO = A.EMP_NO
							AND A1.CURRENT_INDICATOR = 'C'		
				)
				OR A.CHANGE_DATE <= CURRENT_TIMESTAMP
			)
		)
	)
	AND EXISTS
	(
		SELECT 1
		FROM dbo.REFNO RN
		WHERE RN.PAYROLL_EMP_NO = P.EMP_NO
			AND RN.PAY_GROUP = 'MTH'
	);

--select * from #ESH;

SELECT ES.EMP_NO, ES.DATE_EFFECTIVE, ES.WORK_SHIFT_CODE
	,CASE
		WHEN WORK_SHIFT_START_WEEK >= 2
		THEN WORK_SHIFT_START_WEEK
		ELSE 1
	END AS WORK_SHIFT_START_WEEK
	,COALESCE(E.STANDARD_HOURS, 35) AS STANDARD_HOURS
	,ROW_NUMBER() OVER (PARTITION BY ES.EMP_NO ORDER BY ES.DATE_EFFECTIVE DESC) AS rn
into #AllEWSS
FROM dbo.EMPLOYEE_WORK_SHIFT_SCHEME ES
	--LEFT JOIN #ESH E
	JOIN #ESH E
		ON ES.EMP_NO = E.EMP_NO
WHERE LEN(ES.WORK_SHIFT_CODE) > 0;

--select * from #AllEWSS;

TRUNCATE TABLE dbo.WP_EWSS;
WITH EWSS
AS
(
	SELECT EMP_NO, DATE_EFFECTIVE, WORK_SHIFT_CODE
		,WORK_SHIFT_START_WEEK, STANDARD_HOURS, rn
	FROM #AllEWSS
	WHERE rn = 1
	UNION ALL
	SELECT A.EMP_NO, A.DATE_EFFECTIVE, A.WORK_SHIFT_CODE
		,A.WORK_SHIFT_START_WEEK, A.STANDARD_HOURS, A.rn
	FROM EWSS E
		JOIN #AllEWSS A
			ON E.DATE_EFFECTIVE > '20170801'--'20170406'
				AND E.EMP_NO = A.EMP_NO
				AND A.rn = E.rn + 1
)
INSERT INTO dbo.WP_EWSS
SELECT EMP_NO, DATE_EFFECTIVE, WORK_SHIFT_CODE
	,WORK_SHIFT_START_WEEK
	,DATEDIFF(day, DATEADD(d, -((DATEPART(weekday, DATE_EFFECTIVE) - DATEPART(dw, 0) + 7) % 7), DATE_EFFECTIVE), DATE_EFFECTIVE) + 1 AS WORK_SHIFT_START_DAY
	,STANDARD_HOURS
FROM EWSS E
WHERE EXISTS
(
	SELECT 1
	FROM PERSON P
	WHERE P.EMP_NO = E.EMP_NO
		AND
		(
			 P.PERSON_STATUS NOT LIKE 'L%'
			OR (P.PERSON_STATUS LIKE 'L%' AND P.DATE_OF_LEAVING >= '20170401')
		)
);

WITH WS
AS
(
	SELECT DISTINCT WORK_SHIFT_CODE, STANDARD_HOURS
	FROM iTLoads.dbo.WP_EWSS
)
,WSP
AS
(
	SELECT *
		,DENSE_RANK() OVER (PARTITION BY WORK_SHIFT_CODE ORDER BY DATE_EFFECTIVE DESC) AS rn
	FROM WORK_SHIFT_PATTERN
)
,WSPAll
AS
(
	SELECT WSP.WORK_SHIFT_CODE
		,WS.STANDARD_HOURS
		,WSP.DATE_EFFECTIVE
		,WSP.WEEK_NUMBER
		,CASE
			WHEN X.DURATION_CALCULATION = 'D'
			THEN WSP.WORK_SHIFT_MONDAY * WS.STANDARD_HOURS/5
			ELSE WSP.WORK_SHIFT_MONDAY
		END AS WORK_SHIFT_MONDAY
		,CASE
			WHEN X.DURATION_CALCULATION = 'D'
			THEN WSP.WORK_SHIFT_TUESDAY * WS.STANDARD_HOURS/5
			ELSE WSP.WORK_SHIFT_TUESDAY
		END AS WORK_SHIFT_TUESDAY
		,CASE
			WHEN X.DURATION_CALCULATION = 'D'
			THEN WSP.WORK_SHIFT_WEDNESDAY * WS.STANDARD_HOURS/5
			ELSE WSP.WORK_SHIFT_WEDNESDAY
		END AS WORK_SHIFT_WEDNESDAY
		,CASE
			WHEN X.DURATION_CALCULATION = 'D'
			THEN WSP.WORK_SHIFT_THURSDAY * WS.STANDARD_HOURS/5
			ELSE WSP.WORK_SHIFT_THURSDAY
		END AS WORK_SHIFT_THURSDAY
		,CASE
			WHEN X.DURATION_CALCULATION = 'D'
			THEN WSP.WORK_SHIFT_FRIDAY * WS.STANDARD_HOURS/5
			ELSE WSP.WORK_SHIFT_FRIDAY
		END AS WORK_SHIFT_FRIDAY
		,CASE
			WHEN X.DURATION_CALCULATION = 'D'
			THEN WSP.WORK_SHIFT_SATURDAY * WS.STANDARD_HOURS/5
			ELSE WSP.WORK_SHIFT_SATURDAY
		END AS WORK_SHIFT_SATURDAY
		,CASE
			WHEN X.DURATION_CALCULATION = 'D'
			THEN WSP.WORK_SHIFT_SUNDAY * WS.STANDARD_HOURS/5
			ELSE WSP.WORK_SHIFT_SUNDAY
		END AS WORK_SHIFT_SUNDAY
		,X.DURATION_CALCULATION
		,MAX(WSP.WEEK_NUMBER) OVER (PARTITION BY WSP.WORK_SHIFT_CODE) AS MaxWeek
	--into #WSPAll
	FROM WS
		JOIN WSP
			ON WS.WORK_SHIFT_CODE = WSP.WORK_SHIFT_CODE
				AND WSP.rn = 1
				--AND WSP.WEEK_NUMBER < 2
			CROSS APPLY
			(
				VALUES
				(
					CASE
						WHEN WSP.WORK_SHIFT_SUNDAY <= 1
							AND WSP.WORK_SHIFT_MONDAY <= 1
							AND WSP.WORK_SHIFT_TUESDAY <= 1
							AND WSP.WORK_SHIFT_WEDNESDAY <= 1
							AND WSP.WORK_SHIFT_THURSDAY <= 1
							AND WSP.WORK_SHIFT_FRIDAY <= 1
							AND WSP.WORK_SHIFT_SATURDAY <= 1
						THEN 'D'
						ELSE 'H'
					END
				)
			) X (DURATION_CALCULATION)
)
SELECT W.WORK_SHIFT_CODE
	--,'M' + X.MonHrs + CASE WHEN LEN(X.MonMins) > 0 THEN ':' + X.MonMins ELSE '' END
	--+ 'T' + X.TueHrs + CASE WHEN LEN(X.TueMins) > 0 THEN ':' + X.TueMins ELSE '' END
	--+ 'W' + X.WedHrs + CASE WHEN LEN(X.WedMins) > 0 THEN ':' + X.WedMins ELSE '' END
	--+ 'T' + X.ThuHrs + CASE WHEN LEN(X.ThuMins) > 0 THEN ':' + X.ThuMins ELSE '' END
	--+ 'F' + X.FriHrs + CASE WHEN LEN(X.FriMins) > 0 THEN ':' + X.FriMins ELSE '' END AS WORK_SHIFT_CODE_NEW
	,CASE WHEN W.WORK_SHIFT_MONDAY > 0 THEN 'm' + X.MonHrs ELSE '' END
	+ CASE WHEN LEN(X.MonMins) > 0 THEN ':' + X.MonMins ELSE '' END
	+ CASE WHEN W.WORK_SHIFT_TUESDAY > 0 THEN 't' + X.TueHrs ELSE '' END
	+ CASE WHEN LEN(X.TueMins) > 0 THEN ':' + X.TueMins ELSE '' END
	+ CASE WHEN W.WORK_SHIFT_WEDNESDAY > 0 THEN 'w' + X.WedHrs ELSE '' END
	+ CASE WHEN LEN(X.WedMins) > 0 THEN ':' + X.WedMins ELSE '' END
	+ CASE WHEN W.WORK_SHIFT_THURSDAY > 0 THEN 'th' + X.ThuHrs ELSE '' END
	+ CASE WHEN LEN(X.ThuMins) > 0 THEN ':' + X.ThuMins ELSE '' END
	+ CASE WHEN W.WORK_SHIFT_FRIDAY > 0 THEN 'f' + X.FriHrs ELSE '' END
	+ CASE WHEN LEN(X.FriMins) > 0 THEN ':' + X.FriMins ELSE '' END AS WORK_SHIFT_CODE_NEW
	,W.STANDARD_HOURS
	,W.WEEK_NUMBER
	,X.MonHrs + CASE WHEN LEN(X.MonMins) > 0 THEN ':' + X.MonMins ELSE '' END AS WORK_SHIFT_MONDAY
	,X.TueHrs + CASE WHEN LEN(X.TueMins) > 0 THEN ':' + X.TueMins ELSE '' END AS WORK_SHIFT_TUESDAY
	,X.WedHrs + CASE WHEN LEN(X.WedMins) > 0 THEN ':' + X.WedMins ELSE '' END AS WORK_SHIFT_WEDNESDAY
	,X.ThuHrs + CASE WHEN LEN(X.ThuMins) > 0 THEN ':' + X.ThuMins ELSE '' END AS WORK_SHIFT_THURSDAY
	,X.FriHrs + CASE WHEN LEN(X.FriMins) > 0 THEN ':' + X.FriMins ELSE '' END AS WORK_SHIFT_FRIDAY
	,X.SatHrs + CASE WHEN LEN(X.SatMins) > 0 THEN ':' + X.SatMins ELSE '' END AS WORK_SHIFT_SATURDAY
	,X.SunHrs + CASE WHEN LEN(X.SunMins) > 0 THEN ':' + X.SunMins ELSE '' END AS WORK_SHIFT_SUNDAY
	,W.MaxWeek
into #WSP
FROM WSPAll W
	CROSS APPLY
	(
		VALUES
		(
			CAST(CAST(W.WORK_SHIFT_MONDAY AS int) AS varchar(2))
			,CASE
				WHEN CAST(W.WORK_SHIFT_MONDAY as money) % 1 > 0
				THEN CAST(CAST(ROUND((CAST(W.WORK_SHIFT_MONDAY AS money) % 1)*3/5, 2) * 100 AS int) AS char(2))
				ELSE ''
			END
			,CAST(CAST(W.WORK_SHIFT_TUESDAY AS int) AS varchar(2))
			,CASE
				WHEN CAST(W.WORK_SHIFT_TUESDAY as money) % 1 > 0
				THEN CAST(CAST(ROUND((CAST(W.WORK_SHIFT_TUESDAY AS money) % 1)*3/5, 2) * 100 AS int) AS char(2))
				ELSE ''
			END
			,CAST(CAST(W.WORK_SHIFT_WEDNESDAY AS int) AS varchar(2))
			,CASE
				WHEN CAST(W.WORK_SHIFT_WEDNESDAY as money) % 1 > 0
				THEN CAST(CAST(ROUND((CAST(W.WORK_SHIFT_WEDNESDAY AS money) % 1)*3/5, 2) * 100 AS int) AS char(2))
				ELSE ''
			END
			,CAST(CAST(W.WORK_SHIFT_THURSDAY AS int) AS varchar(2))
			,CASE
				WHEN CAST(W.WORK_SHIFT_THURSDAY as money) % 1 > 0
				THEN CAST(CAST(ROUND((CAST(W.WORK_SHIFT_THURSDAY AS money) % 1)*3/5, 2) * 100 AS int) AS char(2))
				ELSE ''
			END
			,CAST(CAST(W.WORK_SHIFT_FRIDAY AS int) AS varchar(2))
			,CASE
				WHEN CAST(W.WORK_SHIFT_FRIDAY as money) % 1 > 0
				THEN CAST(CAST(ROUND((CAST(W.WORK_SHIFT_FRIDAY AS money) % 1)*3/5, 2) * 100 AS int) AS char(2))
				ELSE ''
			END
			,CAST(CAST(W.WORK_SHIFT_SATURDAY AS int) AS varchar(2))
			,CASE
				WHEN CAST(W.WORK_SHIFT_SATURDAY as money) % 1 > 0
				THEN CAST(CAST(ROUND((CAST(W.WORK_SHIFT_SATURDAY AS money) % 1)*3/5, 2) * 100 AS int) AS char(2))
				ELSE ''
			END
			,CAST(CAST(W.WORK_SHIFT_SUNDAY AS int) AS varchar(2))
			,CASE
				WHEN CAST(W.WORK_SHIFT_SUNDAY as money) % 1 > 0
				THEN CAST(CAST(ROUND((CAST(W.WORK_SHIFT_SUNDAY AS money) % 1)*3/5, 2) * 100 AS int) AS char(2))
				ELSE ''
			END
		)
	) X (MonHrs,MonMins,TueHrs,TueMins,WedHrs,WedMins,ThuHrs,ThuMins,FriHrs,FriMins,SatHrs,SatMins,SunHrs,SunMins)
ORDER BY WORK_SHIFT_CODE, Week_NUMBER

--Need to rollup multi-weeks for WorkShiftCode.
TRUNCATE TABLE dbo.WP_WSP;
WITH NewCode
AS
(
	SELECT W1.WORK_SHIFT_CODE, W1.STANDARD_HOURS
			,X.WORK_SHIFT_CODE_NEW
	FROM #WSP W1
	CROSS APPLY ( SELECT 
			(SELECT W2.WORK_SHIFT_CODE_NEW 
				FROM #WSP W2
				WHERE W2.WORK_SHIFT_CODE = W1.WORK_SHIFT_CODE
					AND W2.STANDARD_HOURS = W1.STANDARD_HOURS
					AND W2.MaxWeek > 1
				ORDER BY W2.Week_NUMBER
				FOR XML PATH(''), TYPE).value('.', 'varchar(max)')
	)  X (WORK_SHIFT_CODE_NEW)
	WHERE W1.MaxWeek > 1
)
INSERT INTO dbo.WP_WSP
SELECT DISTINCT W.WORK_SHIFT_CODE
	,W.STANDARD_HOURS
	,COALESCE(N.WORK_SHIFT_CODE_NEW, W.WORK_SHIFT_CODE_NEW) AS WORK_SHIFT_CODE_NEW
	,W.WEEK_NUMBER
	,W.MaxWeek
	,W.WORK_SHIFT_MONDAY
	,W.WORK_SHIFT_TUESDAY
	,W.WORK_SHIFT_WEDNESDAY
	,W.WORK_SHIFT_THURSDAY
	,W.WORK_SHIFT_FRIDAY
	,W.WORK_SHIFT_SATURDAY
	,W.WORK_SHIFT_SUNDAY
FROM #WSP W
	LEFT JOIN NewCode N
		ON W.WORK_SHIFT_CODE = N.WORK_SHIFT_CODE
			AND W.STANDARD_HOURS = N.STANDARD_HOURS;


--select * from iTLoads.dbo.WP_WSP where week_number = 1
GO
